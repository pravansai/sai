master t3-medium; nodes:t2-medium
sudo su -
swapoff -a
turn of swap memory even restart also below command
sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
sudo apt-get update -y
sudo apt-get install -y apt-transport-https -y
sudo su -(recentlu added if req)
keyadding below line9-debian
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
debian repository for where k8's packages
cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
apt update -y
apt install -y kubelet containerd kubeadm kubectl kubernetes-cni(no need for containerd) - 
above tools are not automatically upgrade
apt-mark hold kubelet containerd kubeadm kubectl
enable kernal features - containerd to work 
cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf 
overlay 
br_netfilter 
EOF
modprobe overlay
modprobe br_netfilter
enabling ip tables(
cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf net.bridge.bridge-nf-call-iptables = 1 
net.ipv4.ip_forward = 1 
net.bridge.bridge-nf-call-ip6tables = 1 
EOF
load above details
sysctl --system
configure containerd -----(recent-req- type these commands no need for containerd-   apt install docker.io -y ; usermod -aG docker ubuntu ; systemctl restart docker ; systemctl enable docker.service)
mkdir -p /etc/containerd
containerd config default | sudo tee /etc/containerd/config.toml
systemctl restart containerd
systemctl daemon-reload
systemctl start kubelet
kubelet enable bootstrap- automatically on if server start and stop
systemctl enable kubelet.service

only on master
initilize k8 controlplane
kubeadm init
exit
kubectl version
mkdir -p $HOME/.kube
kubeconfigfile - file is copied to home directory
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
pod network - we are using weave net
kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml
worker token command
kubeadm token create --print-join-command



